# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name pishchik-dev.tech www.pishchik-dev.tech;
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    server_name pishchik-dev.tech www.pishchik-dev.tech;

    ssl_certificate /etc/letsencrypt/live/pishchik-dev.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pishchik-dev.tech/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Main application
    location / {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
    }

    # Grafana - fix redirect loop
    location /grafana {
        return 301 /grafana/;
    }

    location /grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 300s;
        proxy_redirect off;
        proxy_buffering off;
        # Fix Grafana redirect loop - rewrite internal redirects
        proxy_redirect / /grafana/;
    }

    # Prometheus - fix redirect
    location /prometheus {
        return 301 /prometheus/;
    }

    location /prometheus/ {
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_read_timeout 300s;
        proxy_redirect / /prometheus/;
        proxy_buffering off;
        proxy_set_header Accept-Encoding "";
    }

    # Loki - fix 404
    location /loki {
        return 301 /loki/;
    }

    location /loki/ {
        proxy_pass http://loki:3100/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
        proxy_read_timeout 300s;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Accept-Encoding "";
        # Loki fallback to ready endpoint for root path
        error_page 404 = @loki_ready;
    }

    location @loki_ready {
        proxy_pass http://loki:3100/ready;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host $host;
    }
}
