---
- name: Configure Telegram Bot on Server
  hosts: all
  become: true
  vars:
    project_root: "{{ playbook_dir }}/../.."
  tasks:
    - name: Check if .env file exists
      stat:
        path: /opt/devops-portfolio/.env
      register: env_file

    - name: Display current .env content
      debug:
        msg: "Current .env file content:"
      when: env_file.stat.exists

    - name: Show current .env content
      shell: cat /opt/devops-portfolio/.env
      register: env_content
      when: env_file.stat.exists

    - name: Display .env content
      debug:
        msg: "{{ env_content.stdout_lines }}"
      when: env_file.stat.exists

    - name: Display Telegram bot setup instructions
      debug:
        msg: |
          üì± Telegram Bot Configuration Required!
          ======================================
          
          To configure Telegram alerting, you need to:
          
          1. Create a Telegram bot:
             - Open Telegram and search for @BotFather
             - Send /newbot command
             - Choose a name for your bot (e.g., 'DevOps Portfolio Alerts')
             - Choose a username for your bot (e.g., 'devops_portfolio_alerts_bot')
             - Copy the bot token
          
          2. Get your Chat ID:
             - Start a chat with your bot
             - Send any message to the bot
             - Visit: https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
             - Find your chat ID in the response
          
          3. Update .env file on server:
             - Edit /opt/devops-portfolio/.env
             - Replace 'your_bot_token_here' with your actual bot token
             - Replace 'your_chat_id_here' with your actual chat ID
          
          4. Restart Alertmanager:
             - Run: docker compose -f /opt/devops-portfolio/docker-compose.yml restart alertmanager
          
          üåê Access URLs:
          - Alertmanager: https://pishchik-dev.tech/alertmanager/
          - Prometheus: https://pishchik-dev.tech/prometheus/
          - Grafana: https://pishchik-dev.tech/grafana/

    - name: Create Telegram bot setup script on server
      copy:
        content: |
          #!/bin/bash
          
          echo "ü§ñ Setting up Telegram Bot for Alerts"
          echo "======================================"
          echo ""
          
          # Check if jq is installed
          if ! command -v jq &> /dev/null; then
              echo "‚ùå jq is not installed. Installing jq..."
              apt-get update && apt-get install -y jq
          fi
          
          echo "üì± Step 1: Create a Telegram Bot"
          echo "1. Open Telegram and search for @BotFather"
          echo "2. Send /newbot command"
          echo "3. Choose a name for your bot (e.g., 'DevOps Portfolio Alerts')"
          echo "4. Choose a username for your bot (e.g., 'devops_portfolio_alerts_bot')"
          echo "5. Copy the bot token that BotFather gives you"
          echo ""
          
          read -p "Enter your bot token: " BOT_TOKEN
          
          if [ -z "$BOT_TOKEN" ]; then
              echo "‚ùå Bot token cannot be empty"
              exit 1
          fi
          
          echo ""
          echo "üîç Step 2: Getting your Chat ID"
          echo "1. Start a chat with your bot (search for the username you created)"
          echo "2. Send any message to the bot (e.g., 'Hello')"
          echo "3. Press Enter to continue after sending the message..."
          
          read -p "Press Enter after sending a message to your bot..."
          
          echo "Getting your chat ID..."
          
          # Get updates from the bot
          UPDATES=$(curl -s "https://api.telegram.org/bot${BOT_TOKEN}/getUpdates")
          
          # Extract chat ID
          CHAT_ID=$(echo "$UPDATES" | jq -r '.result[0].message.chat.id')
          
          if [ "$CHAT_ID" = "null" ] || [ -z "$CHAT_ID" ]; then
              echo "‚ùå Could not get chat ID. Please make sure you sent a message to the bot."
              echo "Raw response: $UPDATES"
              exit 1
          fi
          
          echo "‚úÖ Chat ID found: $CHAT_ID"
          
          # Test the bot
          echo ""
          echo "üß™ Step 3: Testing the bot..."
          TEST_MESSAGE="ü§ñ Test message from DevOps Portfolio setup script!"
          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d "chat_id=${CHAT_ID}" \
              -d "text=${TEST_MESSAGE}"
          
          if [ $? -eq 0 ]; then
              echo "‚úÖ Test message sent successfully!"
          else
              echo "‚ùå Failed to send test message"
              exit 1
          fi
          
          # Update .env file
          echo ""
          echo "üìù Step 4: Updating .env file..."
          
          # Backup original .env file
          cp /opt/devops-portfolio/.env /opt/devops-portfolio/.env.backup
          
          # Update .env file
          sed -i "s/your_bot_token_here/${BOT_TOKEN}/g" /opt/devops-portfolio/.env
          sed -i "s/your_chat_id_here/${CHAT_ID}/g" /opt/devops-portfolio/.env
          
          echo "‚úÖ .env file updated with your bot credentials"
          
          # Restart Alertmanager
          echo ""
          echo "üîÑ Step 5: Restarting Alertmanager..."
          docker compose -f /opt/devops-portfolio/docker-compose.yml restart alertmanager
          
          echo ""
          echo "üéâ Setup Complete!"
          echo "=================="
          echo "Your Telegram bot is ready to receive alerts!"
          echo ""
          echo "üåê Access URLs:"
          echo "   ‚Ä¢ Alertmanager: https://pishchik-dev.tech/alertmanager/"
          echo "   ‚Ä¢ Prometheus: https://pishchik-dev.tech/prometheus/"
          echo "   ‚Ä¢ Grafana: https://pishchik-dev.tech/grafana/"
          echo ""
          echo "Happy monitoring! üöÄ"
        dest: /opt/devops-portfolio/setup-telegram-bot.sh
        mode: '0755'

    - name: Display final instructions
      debug:
        msg: |
          üéØ Next Steps:
          =============
          
          1. SSH to your server:
             ssh user@your-server-ip
          
          2. Run the Telegram bot setup script:
             /opt/devops-portfolio/setup-telegram-bot.sh
          
          3. Or manually edit the .env file:
             nano /opt/devops-portfolio/.env
          
          4. Restart Alertmanager:
             docker compose -f /opt/devops-portfolio/docker-compose.yml restart alertmanager
          
          üì± The system will work without Telegram initially, but alerts won't be sent until you configure the bot.
