---
- name: Setup Telegram Alerting System
  hosts: all
  become: true
  vars:
    project_root: "{{ playbook_dir }}/../.."
  tasks:
    - name: Create alertmanager directory
      file:
        path: /opt/devops-portfolio/infra/monitoring/alertmanager
        state: directory
        mode: '0755'

    - name: Create prometheus rules directory
      file:
        path: /opt/devops-portfolio/infra/monitoring/prometheus/rules
        state: directory
        mode: '0755'

    - name: Copy alertmanager configuration
      copy:
        src: "{{ project_root }}/infra/monitoring/alertmanager/alertmanager.yml"
        dest: /opt/devops-portfolio/infra/monitoring/alertmanager/alertmanager.yml
        mode: '0644'

    - name: Copy prometheus alert rules
      copy:
        src: "{{ project_root }}/infra/monitoring/prometheus/rules/alerts.yml"
        dest: /opt/devops-portfolio/infra/monitoring/prometheus/rules/alerts.yml
        mode: '0644'

    - name: Copy updated prometheus configuration
      copy:
        src: "{{ project_root }}/infra/monitoring/prometheus/prometheus.yml"
        dest: /opt/devops-portfolio/infra/monitoring/prometheus/prometheus.yml
        mode: '0644'

    - name: Copy updated nginx configuration
      copy:
        src: "{{ project_root }}/infra/nginx/nginx.conf"
        dest: /opt/devops-portfolio/infra/nginx/nginx.conf
        mode: '0644'

    - name: Copy updated docker-compose.yml
      copy:
        src: "{{ project_root }}/docker-compose.yml"
        dest: /opt/devops-portfolio/docker-compose.yml
        mode: '0644'

    - name: Copy env.example
      copy:
        src: "{{ project_root }}/env.example"
        dest: /opt/devops-portfolio/env.example
        mode: '0644'

    - name: Create .env file if it doesn't exist
      copy:
        src: "{{ project_root }}/env.example"
        dest: /opt/devops-portfolio/.env
        mode: '0644'
      when: not ansible_check_mode

    - name: Create .env file with placeholder values if it doesn't exist
      copy:
        content: |
          # Telegram Bot Configuration
          # Configure these values manually after deployment
          TELEGRAM_BOT_TOKEN=your_bot_token_here
          TELEGRAM_CHAT_ID=your_chat_id_here
        dest: /opt/devops-portfolio/.env
        mode: '0644'
      when: not ansible_check_mode

    - name: Display Telegram setup instructions
      debug:
        msg: |
          üì± Telegram Alerting Setup Required!
          ===================================
          
          The system has been deployed with placeholder Telegram credentials.
          To enable Telegram notifications, you need to:
          
          1. SSH to your server:
             ssh user@your-server-ip
          
          2. Run the automated setup script:
             /opt/devops-portfolio/setup-telegram-bot.sh
          
          3. Or manually configure:
             - Edit /opt/devops-portfolio/.env
             - Replace 'your_bot_token_here' with your actual bot token
             - Replace 'your_chat_id_here' with your actual chat ID
             - Restart: docker compose -f /opt/devops-portfolio/docker-compose.yml restart alertmanager
          
          üåê Access URLs:
          - Alertmanager: https://pishchik-dev.tech/alertmanager/
          - Prometheus: https://pishchik-dev.tech/prometheus/
          - Grafana: https://pishchik-dev.tech/grafana/
          
          üìù Note: The system will work without Telegram initially, but alerts won't be sent until you configure the bot.

    - name: Stop existing containers
      shell: docker compose -f /opt/devops-portfolio/docker-compose.yml down
      args:
        chdir: /opt/devops-portfolio
      ignore_errors: true

    - name: Start updated stack
      shell: docker compose -f /opt/devops-portfolio/docker-compose.yml up -d
      args:
        chdir: /opt/devops-portfolio

    - name: Wait for services to start
      wait_for:
        port: 9093
        host: localhost
        timeout: 60

    - name: Health check - Alertmanager
      uri:
        url: http://localhost:9093/-/healthy
        method: GET
        status_code: 200
      ignore_errors: true

    - name: Health check - Prometheus
      uri:
        url: http://localhost:9090/-/healthy
        method: GET
        status_code: 200
      ignore_errors: true

    - name: Display completion message
      debug:
        msg: |
          üéâ Telegram Alerting System Setup Complete!
          ==========================================
          
          ‚úÖ Alertmanager configured
          ‚úÖ Prometheus alert rules created
          ‚úÖ Docker Compose updated
          ‚úÖ Nginx configuration updated
          
          üì± Next Steps:
          1. Configure your Telegram bot credentials in .env file
          2. Restart the stack: docker compose -f /opt/devops-portfolio/docker-compose.yml restart
          3. Test alerts by visiting: https://pishchik-dev.tech/alertmanager/
          
          üß™ Test Alerts:
          - Create a test alert via Alertmanager API
          - Check your Telegram chat for notifications
          
          Happy monitoring! üöÄ
