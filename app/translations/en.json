{
  "nav": {
    "home": "Home",
    "about": "About",
    "monitoring": "Monitoring",
    "architecture": "Architecture",
    "metrics": "Metrics"
  },
  "home": {
    "title": "DevOps Engineer",
    "subtitle": "DevOps engineer with experience in automation and infrastructure building",
    "cta": {
      "learn_more": "Learn More",
      "monitoring": "Monitoring",
      "architecture": "Architecture"
    },
    "features": {
      "cicd": {
        "title": "CI/CD",
        "description": "Auto-build, tests, image publishing and infrastructure delivery."
      },
      "observability": {
        "title": "Observability",
        "description": "Prometheus metrics and Grafana dashboards for services and nodes."
      },
      "logging": {
        "title": "Logging",
        "description": "Loki/Promtail for centralized log collection and analysis."
      },
      "infrastructure": {
        "title": "Infrastructure",
        "description": "IaC with Terraform and Ansible. Containerization and orchestration."
      }
    },
    "about_me": {
      "title": "About Me",
      "description": "DevOps/Platform engineer with over 10 years of experience in building and supporting infrastructures. Specializing in process automation, creating reproducible environments and implementing transparent delivery pipelines. I value reliability, predictability and metrics that help teams move faster and safer.",
      "links": {
        "linkedin": "LinkedIn",
        "rabota": "rabota.by",
        "email": "Email"
      }
    },
    "skills": {
      "title": "Skills and Experience",
      "experience": "Over 10 years",
      "description": "of experience in supporting IT infrastructures on various projects. Skills in web servers, networks, monitoring, email, virtualization, databases, containerization.",
      "key_skills": "Key DevOps Skills (Junior)",
      "os_virtualization": "Operating Systems & Virtualization: Linux, Windows, VMWare, Hyper‚ÄëV, Proxmox",
      "containers": "Containers & Orchestration: Docker, Docker Compose, Kubernetes (basic)",
      "cicd": "CI/CD: Jenkins, GitLab CI, GitHub Actions",
      "networking": "Networking & Infrastructure: DHCP, DNS, TCP/IP, FTP, RDP, OpenVPN, PPTP, Ethernet, NAT, IPSec, Mikrotik",
      "web_servers": "Web Servers: IIS, Apache, Nginx",
      "cloud_platforms": "Cloud Platforms: Google Cloud Platform, AWS, Yandex Cloud, Hetzner",
      "databases": "Databases: PostgreSQL, MS SQL",
      "automation": "Automation & Scripting: Ansible, Bash, Python scripting",
      "monitoring": "Monitoring & Observability: Zabbix, Prometheus, Grafana, Alertmanager, Loki",
      "business_systems": "Business & Enterprise Systems: 1C, 1C Cluster, Active Directory (AD), Email Servers",
      "telephony": "Telephony: Asterisk, VoIP",
      "security": "Security: Vaultwarden, SSL/TLS, Access Control",
      "version_control": "Version Control: Git"
    }
  },
  "monitoring": {
    "title": "System Monitoring",
    "subtitle": "Tools for monitoring infrastructure and application status",
    "grafana": {
      "title": "üìà Grafana Dashboards",
      "description": "Main monitoring tool with beautiful dashboards and graphs. Shows application metrics, system resources and service status.",
      "button": "Open Grafana"
    },
    "prometheus": {
      "title": "üìä Prometheus",
      "description": "Metrics collection and monitoring system. Collects data on application and infrastructure performance. Useful for debugging and analysis.",
      "button": "Open Prometheus"
    },
    "loki": {
      "title": "üìù Loki",
      "description": "Log aggregation system. Centralized collection and analysis of application and service logs. Integrated with Grafana.",
      "button": "Open Loki"
    },
    "system_info": {
      "title": "üñ•Ô∏è System Information",
      "disk_usage": "üíæ Disk Usage",
      "docker_containers": "üê≥ Docker Containers",
      "loading": "Loading...",
      "error": "Error",
      "not_found": "Not found",
      "unknown_error": "Unknown error",
      "used": "Used",
      "free": "Free",
      "total": "Total",
      "containers_not_found": "Containers not found",
      "failed_to_load": "Failed to load data"
    },
    "backups": {
      "title": "üíæ Backup Statistics",
      "subtitle": "Automatic backups are created daily at 2:00",
      "general_stats": "üìä General Statistics",
      "last_backup": "‚è∞ Last Backup",
      "automation_status": "üîß Automation Status",
      "backup_list": "üìã Backup List",
      "total_backups": "Total Backups",
      "total_size": "Total Size",
      "no_backups": "No Backups",
      "backups_not_found": "Backups not found",
      "automatic_backups": "Automatic Backups",
      "loading_error": "Loading Error"
    },
    "containers": {
      "title": "Containers",
      "status": "Status",
      "uptime": "Uptime",
      "refresh": "Refresh"
    },
    "system": {
      "title": "System Metrics",
      "disk_usage": "Disk Usage",
      "memory": "Memory",
      "cpu": "CPU"
    }
  },
  "architecture": {
    "title": "Project Architecture",
    "subtitle": "Infrastructure diagram and DevOps Portfolio components",
    "diagram_title": "Architecture Diagram",
    "components": {
      "web_layer": {
        "title": "Web Layer",
        "description": "Nginx - Reverse proxy, request routing",
        "ports": "Port 80 (HTTP), 443 (HTTPS)"
      },
      "app_layer": {
        "title": "Application Layer",
        "description": "Flask App - Main portfolio application",
        "ports": "Port 8000",
        "functions": "Functions: Web interface, API, metrics"
      },
      "monitoring_layer": {
        "title": "Monitoring Layer",
        "prometheus": "Prometheus - Metrics collection",
        "grafana": "Grafana - Visualization and dashboards",
        "ports": "Port 9090 (Prometheus), 3001 (Grafana)"
      },
      "logging_layer": {
        "title": "Logging Layer",
        "loki": "Loki - Log aggregation",
        "promtail": "Promtail - Container log collection",
        "ports": "Port 3100 (Loki)"
      },
      "cicd_layer": {
        "title": "CI/CD Pipeline",
        "github": "GitHub Actions - Automatic deployment",
        "ghcr": "GHCR - Container registry",
        "ansible": "Ansible - Configuration management",
        "terraform": "Terraform - Infrastructure as code"
      },
      "storage_layer": {
        "title": "Storage",
        "grafana_data": "Grafana Data - SQLite database",
        "loki_data": "Loki Data - File system"
      }
    },
    "data_flows": {
      "title": "Data Flows",
      "user_traffic": "User traffic:",
      "metrics": "Metrics:",
      "logs": "Logs:",
      "deployment": "Deployment:"
    },
    "security": {
      "title": "Security",
      "firewall": "Firewall: Configured via Yandex Cloud Security Groups",
      "https": "HTTPS: Let's Encrypt certificates",
      "isolation": "Isolation: Docker containers in separate network",
      "access": "Access: SSH keys for administrative access"
    }
  },
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "refresh": "Refresh",
    "back": "Back",
    "next": "Next",
    "close": "Close",
    "save": "Save",
    "cancel": "Cancel"
  },
  "footer": {
    "copyright": "¬© 2025 DevOps Portfolio"
  }
}
